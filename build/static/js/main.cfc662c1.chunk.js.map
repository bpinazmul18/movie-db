{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","useFetch","urlParams","useState","isLoading","setIsLoading","show","msg","error","setError","data","setData","fetchMovies","url","a","fetch","response","json","Response","Search","Error","console","log","message","useEffect","AppContext","React","createContext","AppProvider","children","query","setQuery","movies","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","key","src","alt","Home","SingleMovie","useParams","plot","Plot","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc662c1.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\n\nconst useFetch = (urlParams) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState({ show: false, msg: \"\" });\n  const [data, setData] = useState(null);\n\n  const fetchMovies = async (url) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.Response === \"True\") {\n        setData(data.Search || data);\n        setError({ show: false, msg: \"\" });\n      } else {\n        setError({ show: true, msg: data.Error });\n      }\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies(`${API_ENDPOINT}${urlParams}`);\n  }, [urlParams]);\n  return { isLoading, error, data };\n};\n\nexport default useFetch;\n","import React, { useState, useContext } from \"react\";\nimport useFetch from \"./useFetch\";\n// make sure to use https\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [query, setQuery] = useState(\"batman\");\n  const { error, isLoading, data: movies } = useFetch(`&s=${query}`);\n  return (\n    <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nconst SearchForm = () => {\n  const { error, query, setQuery } = useGlobalContext();\n\n  return (\n    <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\n      <h2>Search Form</h2>\n      <input\n        type=\"text\"\n        className=\"form-input\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {error.show && <div className=\"error\">{error.msg}</div>}\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { Link } from \"react-router-dom\";\nconst url =\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n\nconst Movies = () => {\n  const { movies, isLoading } = useGlobalContext();\n  if (isLoading) {\n    return <div className=\"loading\"></div>;\n  }\n  return (\n    <section className=\"movies\">\n      {movies.map((movie) => {\n        const { imdbID: id, Poster: poster, Title: title, Year: year } = movie;\n        return (\n          <Link to={`/movie/${id}`} key={id} className=\"movie\">\n            <article>\n              <img src={poster === \"N/A\" ? url : poster} alt={title} />\n              <div className=\"movie-info\">\n                <h4 className=\"title\">{title}</h4>\n                <p>{year}</p>\n              </div>\n            </article>\n          </Link>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default Movies;\n","import React from \"react\";\nimport Form from \"./SearchForm\";\nimport Movies from \"./Movies\";\nconst Home = () => {\n  return (\n    <main>\n      <Form />\n      <Movies />\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nconst url =\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n\nconst SingleMovie = () => {\n  const { id } = useParams();\n  const { isLoading, error, data: movie } = useFetch(`&i=${id}`);\n\n  if (isLoading) {\n    return <div className=\"loading\"></div>;\n  }\n\n  if (error.show) {\n    return (\n      <div className=\"page-error\">\n        <h1>{error.msg}</h1>\n        <Link to=\"/\" className=\"btn\">\n          Back to Home\n        </Link>\n      </div>\n    );\n  }\n\n  const { Poster: poster, Title: title, Plot: plot, Year: year } = movie;\n  return (\n    <section className=\"single-movie\">\n      <img src={poster === \"N/A\" ? url : poster} alt={title} />\n      <div className=\"single-movie-info\">\n        <h2>{title}</h2>\n        <p>{plot}</p>\n        <h4>{year}</h4>\n\n        <Link to=\"/\" className=\"btn\">\n          Back to Home\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleMovie;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Movie from \"./SingleMovie\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/movie/:id\" children={<Movie />} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}